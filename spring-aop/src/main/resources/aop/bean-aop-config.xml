<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/cosntext
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
    <!-- 启用代理类 -->
    <!--
        默认情况下当 bean 实现了接口时，Spring AOP 是基于 JDK 的动态代理实现。
        如果我们的 bean 是没有实现接口的，则会采用CGLIB代理。
        如果我们希望不管 bean 是否实现了接口都采用CGLIB代理，可以通过配置 proxy-target-class=”true” 启用CGLIB代理。
    -->
    <aop:config proxy-target-class="true"/>

    <!-- Dao -->
    <bean id="userDao" class="com.hnanet.aop.spring.xml.dao.UserDao"></bean>
    <!-- Service -->
    <bean id="userService" class="com.hnanet.aop.spring.xml.service.UserService" p:userDao-ref="userDao"/>
    <!-- Controller -->
    <bean id="userController" class="com.hnanet.aop.spring.xml.controller.UserController" p:userService-ref="userService"/>
    <!-- aop -->
    <bean id="aopAdvice" class="com.hnanet.aop.spring.xml.advice.AopAdvice"/>

    <!-- 基于 XML 的 Aop 配置是基于 config 元素开始的 -->
    <aop:config>
        <!-- 切入点指定，将在切入点处理或插入通知 -->
        <aop:pointcut expression="execution(* com.hnanet.aop.spring.xml.dao.UserDao.*(..))" id="baseAdvice" />
        <aop:pointcut expression="execution(* com.hnanet.aop.spring.xml.dao.UserDao.find*(..))" id="findAdvice" />
        <!-- 指定切点处理的优先级,数值越小优先级越高 -->
        <aop:aspect ref="aopAdvice" order="1">
            <aop:before method="before" pointcut-ref="baseAdvice" />
            <aop:after method="after" pointcut-ref="findAdvice" />
        </aop:aspect>
    </aop:config>

    <aop:config>
        <aop:pointcut expression="execution(* com.hnanet.aop.spring.xml.dao.UserDao.find*(..))" id="findAdvice" />
        <aop:aspect ref="aopAdvice" order="1">
            <aop:around method="aroundMethod" pointcut-ref="findAdvice" />
        </aop:aspect>
    </aop:config>

</beans>